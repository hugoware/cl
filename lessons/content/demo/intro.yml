
- slide:
    mode: overlay
    title: An Introduction to HTML
    content: |
      This brief tutorial will give you an introduction to using HTML to create web pages.

- slide:
    title: An Introduction to HTML
    mode: overlay
    content: |
      This is an [define html_element]. This is the most basic of HTML instructions.

      [snippet html_tag_example]


- slide:
    title: An Introduction to HTML
    mode: overlay
    content: |
      The two highlighted blocks of code are known as [define html_tag HTML Tags]

      [snippet html_tag_example highlight: start_tag end_tag]

      When these instructions are viewed in a web browser, it appears as a large, bold header.

- slide:
    title: An Introduction to HTML
    mode: overlay
    content: |
      The content in the middle are the words that will be displayed on the screen.

      [snippet html_tag_example highlight: content]

      In this example, the screen would display **"Hello, World"**

- slide:
    mode: popup
    content: |
      Let's make some changes to an HTML page. Start by opening the `index.html` file by [define double_clicking double clicking] on it.

    waitFor:
      - ::fileOpen(/index.html)

    highlight:
      - ::fileBrowser(/index.html)

    validation:
      openFile: ::allowIfFile(/index.html, open-file)

- slide:
    mode: popup
    content: |
      This is an [define html_file]. The instructions you see on this page are used to create the [define output output] in the [define preview_area].

- slide:
    mode: popup
    content: |
      Like with the example at the start of the lesson, you can see that an [define html_element] is made up of start and ending tags.

    zones:
      /index.html:
        header_start_tag: show
        header_end_tag: show

- slide:
    mode: popup
    content: |
      The words between the two tags are the content, which you can see displayed in the [define preview_area].

    zones:
      /index.html:
        header_content: show
        header_start_tag: hide
        header_end_tag: hide

- slide:
    mode: popup
    content: |
      Try to change the content of this tag to a different greeting. For example: `Hello, World!`.

    cursor: header_content

    zones:
      /index.html:
        header_content: edit

    autoNext: false
    waitFor:
      - ::event(modify-file, verifyHeaderContent)


- slide:
    mode: popup
    content: |
      Let's try that again with a different type of [define html_element]. This element is a **paragraph** which is written using `p` tags.

    zones:
      /index.html:
        paragraph_element: show
        header_content: hide

    cursor: paragraph_content

- slide:
    mode: popup
    content: |
      You'll notice that even though the text appears on multiple lines, it shows up as a single line in the [define preview_area].

    zones:
      /index.html:
        paragraph_element: hide
        paragraph_content: show

- slide:
    mode: popup
    content: |
      Try and change this paragraph to hold several more lines of text. You can make it say whatever you want.

    zones:
      /index.html:
        paragraph_content: edit

    cursor:
      zone: paragraph_content
      at: end

    autoNext: false
    waitFor:
      - ::event(modify-file, verifyParagraphContent)

- slide:
    mode: popup
    content: |
      So far, all of the [define html_element HTML Elements] we've learned about have had a start and ending tag. However, some elements don't have text content. For example, an **image file**.

    zones:
      /index.html:
        paragraph_content: hide

- slide:
    mode: popup
    content: |
      Let's start by uploading an image that we can add to this page.

      Click the **Upload File** option and then drag an image file into the upload area.

    actions:
      - deselect-items

    zones:
      /index.html:
        paragraph_content: hide

    validation:
      uploadFile: verifyFileUploadIsImage

    waitFor:
      - ::event(file-uploaded, verifyUploadImageSuccess)

    highlight:
      - ::ui(upload-file)

    flags: +upload-file-dialog

- slide:
    mode: popup
    content: |
      Now let's add an image to this page. This is done using the `img` [define html_element].

    zones:
      /index.html:
        img_element: expand

    flags: -upload-file-dialog

    actions:
      - hide-all-dialogs

- slide:
    mode: popup
    content: |
      Unlike the other [define html_element HTML Elements], this element doesn't have content that goes between tags, but instead uses an [define html_attribute].

- slide:
    mode: popup
    content: |
      Let's set the source of the image element to be the file that you uploaded. In this case, `/%uploadedFileName%`.

    zones:
      /index.html:
        img_src: edit

    waitFor:
      - ::event(modify-file, verifyImageSrc)

    autoNext: false

- slide:
    mode: overlay
    title: HTML Review
    content: |
      Let's review what we've learned so far!

- question:
    mode: overlay
    
    # the number of possible answers to show
    show: 4

    title: The following code is an example of an... ?

    content: |
      [snippet html_tag_example]

    hint: |
      This is a key element to creating web pages!

    # message to say after the answer has been selected to 
    # sumarize the information for the question
    explain: An HTML Element is made up of HTML Tags. Sometimes an element has a start and end tag, and sometimes it only has a single tag.

    choices:
      - ... HTML Element
      - ... HTML Nugget
      - ... HTML Widget
      - ... HTML Command


- slide:
    mode: popup
    emotion: happy
    content: |
      Well done! You've just created your first web page!

      There's a lot more to learn when it comes to creating web pages, but you're off to a great start!

    zones:
      /index.html:
        img_src: lock
