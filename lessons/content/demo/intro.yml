
- slide:
    mode: overlay
    title: An Introduction to HTML
    content: |
      This brief tutorial will give you an introduction to using HTML to create web pages.


- slide:
    title: An Introduction to HTML
    mode: overlay
    content: |
      This is an [define html_element]. This is the most basic of HTML instructions.

      [snippet html_tag_example]


- slide:
    title: An Introduction to HTML
    mode: overlay
    content: |
      The two highlighted blocks of code are known as [define html_tag HTML Tags]

      [snippet html_tag_example highlight: start_tag end_tag]

      When these instructions are viewed in a web browser, it appears as a large, bold header.

- slide:
    title: An Introduction to HTML
    mode: overlay
    content: |
      The content in the middle is the words that will be displayed on the screen.

      [snippet html_tag_example highlight: content]

      In this example, the screen would display **Hello, World**

- slide:
    mode: popup
    content: |
      Let's make some changes to an HTML page. Let's start by opening the `index.html` page in the File Browser.

    waitFor:
      - ::fileOpen(/index.html)

    highlight:
      - ::fileBrowser(/index.html)

    validation:
      openFile: ::allowIfFile(/index.html, open-file)

- slide:
    mode: popup
    content: |
      Like with our previous example, you can see the start and ending tags

    zones:
      /index.html:
        header_start_tag: show
        header_end_tag: show

- slide:
    mode: popup
    content: |
      The words inbetween match the content on the page

    zones:
      /index.html:
        header_content: show
        header_start_tag: hide
        header_end_tag: hide

- slide:
    mode: popup
    content: |
      Try and change the content to something new

    cursor: header_content

    zones:
      /index.html:
        header_content: edit

    autoNext: false
    waitFor:
      - ::event(modify-file, verifyHeaderContent)


- slide:
    mode: popup
    content: |
      Let's try that again with a different type of HTML element. This one will look like a button

    zones:
      /index.html:
        button_content: edit
        header_content: hide

    cursor: button_content

    autoNext: false
    waitFor:
      - ::event(modify-file, verifyHeaderContent)

- slide:
    mode: popup
    content: |
      Let's try uploading an image and adding it to the page!

      Use the **Upload File** option to go to the next step

    actions:
      - deselect-items

    zones:
      /index.html:
        button_content: hide

    validation:
      uploadFile: verifyFileUploadIsImage

    waitFor:
      - ::event(file-uploaded, verifyUploadImageSuccess)

    highlight:
      - ::ui(upload-file)


    flags: +upload-file-dialog

- slide:
    mode: popup
    content: |
      Great! Let's add an image to the page

    zones:
      /index.html:
        img_element: expand

    flags: -upload-file-dialog

- slide:
    mode: popup
    content: |
      Type in the name of the image file - In this case, `/%uploadedFileName%`

    zones:
      /index.html:
        img_src: edit

    actions:
      - hide-all-dialogs

    flags: -upload-file-dialog

    cursor: img_src

    waitFor:
      - ::editing(verifyImageSrc)
