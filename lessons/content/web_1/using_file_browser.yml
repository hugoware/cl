
- 
  definition:
    id: html
    name: HTML
    aka: Hyper Text Markup Language
    define: This is the full def

- slide:
    mode: popup
    content: |
      Let's learn about unordered lists

      Start by opening the `index.html` file by double clicking on it

    waitFor:
      - fileOpen(/index.html)

    highlights:
      - fileBrowser(/index.html)

    validation:
      openFile: allowOpenIndexHtml

- slide:
    mode: popup
    content: |
      Great! Now that this file is open, let's look at a few things

- slide:
    mode: popup
    content: |
      These are tags that wrap the unordered list

    autoNext: false

    waitFor:
      - ::event(modify-file, verifyHasMultipleListItems)

    zones:
      /index.html:
        ul_start_tag: show
        ul_end_tag: show
        ul_content: edit

- slide:
    mode: popup
    content: |
      This is the contents that go inside

    zones:
      /index.html:
        ul_start_tag: edit
        ul_end_tag: edit
        ul_content: expand

- slide:
    mode: popup
    content: |
      Let's insert another item in the list

    zones:
      /index.html:
        ul_content: edit


-
  slide:
    mode: popup
    title: Creating Web Pages - Part 1
    subtitle: More About Tags
    allowBack: true


    content: |

      This part has an inline *define* [define html] and this is the `>` sign -- it can do to create a website.

      [snippet html_tag_example highlight:main_content]

      [hidden] speak, but don't show
      [silent delay:500] show, but don't speak -- and delay

      Wait for dramatic [define html effect is amazing]

      [delay: 2000] Dramatic!

      This is a final part that's not read


    markers:
      # - $file-browser [file="/main.css"] ::center
      # - $file-browser ::center ::hover(2s) ::lead
      # - $file-browser .actions .upload-file ::center
      
    highlights:
      # - $file-browser
      # - $file-browser [file="/controller.png"]
      - $file-browser .actions .create-file

    flags: +create-file +delete-file

    waitFor: 
      - .tab-bar .tab[file="/index.html"]
    #   - .file-browser .create-file ::click
      # - ::validate(isSlideFinished)
      # 

    files:
      /index.html: lock

    # zones:
    #   /index.html:
    #     header_start_tag: edit
    #     header_end_tag: show
-
  slide:
    mode: popup
    title: Creating Web Pages - Part 1
    subtitle: More About Tags
    checkpoint: true

    files:
      /index.html: unlock

    content: |

      waiting
-
  slide:
    mode: popup
    title: Creating Web Pages - Part 1
    subtitle: More About Tags
    checkpoint: true

    content: |

      This should expand the paragraph

    zones:
      /index.html:
        paragraph_content: expand

-
  slide:
    mode: popup
    checkpoint: true
    emotion: surprised
    content: |
      This is the content of the tag

      [snippet html_tag_example highlight:main_content]

      It's pretty *darn* neat
-
  slide:
    mode: overlay
    content: |
      This is a brand new snippet

      [snippet complex_tag]

      It's pretty *darn* neat

-
  slide:
    mode: overlay
    emotion: surprised
    content: |
      This is a brand new snippet

      [snippet mary_example]

      It's pretty *darn* neat


-
  slide:
    mode: popup
    checkpoint: true
    emotion: sad
    content: |

      Create a new file called `new.pug`

      If you accidentally create the wrong file type, delete and try again

      [hidden once] you should be able to now unlock folders
      

    flags: +delete-file

    validation:
      deleteFile: verifyFileToDelete

    waitFor:
      - .tab-bar .tab[file="/new.pug"]

- 
  slide:
    checkpoint: true
    mode: popup
    emotion: happy
    content: |
      Looks great!

    flags: -create-file -delete-file



- 
  question:
    mode: overlay
    show: 4

    title: What is the name of the `highlighted` block of code?
    content: |
      [snippet mary_example]

    hint: |
      This is a longer example of what a hint might look like. This is going to span for a period longer than the other items on the page.

    explain: This is just a `summary message` to explain the final answer

    choices:
      - this is `correct`
      - This *is* incorrect
      - This _is_ also wrong
      - This ~shouldn't~ work
      - This *is another* mix
      - This _is_ failed

- 
  question:
    mode: overlay
    show: 4

    title: This is another question about what you've learned?

    hint: It's really pretty obvious

    explain: This is just a `summary message` to explain the final answer

    choices:
      - this is `correct`
      - This *is* incorrect
      - This _is_ also wrong
      - This ~shouldn't~ work
      - This *is another* mix
      - This _is_ failed

-
  slide:
    checkpoint: true
    mode: popup
    content: That's it! The lesson is finished!

